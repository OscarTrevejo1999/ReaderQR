{"version":3,"sources":["recoil/atoms.ts","Aramark_logo.png","Components/headerSuperior.tsx","Components/qrReader.tsx","Components/soapCalls.ts","Components/xml_data.js","Components/sectionHeader.tsx","Components/cardsMenu.tsx","Components/menuInfo.tsx","Components/menuScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["menu","atom","key","default","menuSoapCall","token","user","Title","Typography","HeaderSuperior","userData","useRecoilValue","informationSplit","split","gutter","justify","align","span","style","display","preview","width","src","logo","alt","color","level","parseString","require","QrReaderCustom","useRecoilState","setUserData","setMenuData","useSetRecoilState","menuDataSoap","setMenuDataSoap","menuDataSplit","tokenData","QrContainer","props","errorUser","message","error","content","fontSize","errorScan","setUserInformation","data","username","password","url","xmlhttp","XMLHttpRequest","open","sr","onreadystatechange","readyState","status","alert","responseText","setRequestHeader","send","SoapCallLogin","setMenuInformation","idCama","SoapCallGetMenu","xml","DOMParser","parseFromString","SerializeXML","XMLSerializer","serializeToString","getElementsByTagName","err","result","handleScan","length","handleError","console","bind","onError","this","onScan","Object","keys","height","justifyContent","Component","SectionHeader","title","IconComponent","iconComponent","children","hideable","plato","useState","isHided","setIsHide","onClick","className","cursor","fontStyle","textTransform","alignItems","margin","marginTop","placeContent","textAlignLast","CardsMenu","marginBottom","HeartOutlined","undefined","Plato","map","item","paddingTop","WarningOutlined","textAlign","size","bordered","dataSource","Alergias","renderItem","Item","InfoCircleOutlined","Observaciones","PicLeftOutlined","NombreIngesta","NombreDieta","TomaSal","PlatosFormatter","platos","reduce","acum","idPlato","NombrePlato","MenuInfo","setData","menuData","position","Number","idPlatoSelected","platoSelected","MenuPorCama","Platos","menuArray","idIngesta","idDieta","observaciones","Observacion","alergias","Alergia","useEffect","MenuScreen","backgroundColor","borderRadius","padding","paddingRight","Header","Layout","Content","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c5497d1.chunk.js","sourcesContent":["import { atom } from \"recoil\";\r\n\r\nexport const menu = atom({\r\n  key: \"menu\", // unique ID (with respect to other atoms/selectors)\r\n  default: \"\", // default value (aka initial value)\r\n});\r\nexport const menuSoapCall = atom({\r\n  key: \"menuSoapCall\", // unique ID (with respect to other atoms/selectors)\r\n  default: {}, // default value (aka initial value)\r\n});\r\nexport const idPlato = atom({\r\n  key: \"idPlato\", // unique ID (with respect to other atoms/selectors)\r\n  default: \"\", // default value (aka initial value)\r\n});\r\nexport const token = atom({\r\n  key: \"token\", // unique ID (with respect to other atoms/selectors)\r\n  default: 0, // default value (aka initial value)\r\n});\r\n\r\nexport const user = atom({\r\n  key: \"user\", // unique ID (with respect to other atoms/selectors)\r\n  // default: \"\", // default value (aka initial value)\r\n  default: \"\", // default value (aka initial value)\r\n});\r\n","export default __webpack_public_path__ + \"static/media/Aramark_logo.bf37d627.png\";","import { Col, Image, Row, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { user } from \"../recoil/atoms\";\r\nimport logo from \"./../Aramark_logo.png\";\r\n\r\nconst { Title } = Typography;\r\n\r\nexport const HeaderSuperior = () => {\r\n  const userData = useRecoilValue(user);\r\n  const informationSplit = userData.split(\"|\");\r\n\r\n  return (\r\n    <Row gutter={8} justify=\"space-around\" align=\"middle\">\r\n      <Col span={4} style={{ display: \"inherit\" }}>\r\n        <Image preview={false} width={\"12em\"} src={logo} alt=\"Logo\" />\r\n      </Col>\r\n\r\n      <Col span={10}>\r\n        <Title style={{ color: \"white\" }} level={2}>\r\n          {userData !== \"\" ? informationSplit[1] : \"\"}\r\n        </Title>\r\n      </Col>\r\n      <Col span={10}>\r\n        <Title style={{ color: \"white\" }} level={2}>\r\n          {userData !== \"\"\r\n            ? informationSplit[2] === \"0\"\r\n              ? \"Position: Dietista\"\r\n              : \" Position: \" + informationSplit[2]\r\n            : \"\"}\r\n        </Title>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default HeaderSuperior;\r\n","// import axios from \"axios\";\r\nimport { message } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport QrReader from \"react-qr-reader\";\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { menu, menuSoapCall, token, user } from \"../recoil/atoms\";\r\nimport { SoapCallGetMenu, SoapCallLogin } from \"./soapCalls\";\r\nimport xmlData from \"./xml_data\";\r\n\r\nvar parseString = require(\"xml2js\").parseString;\r\n\r\nexport const QrReaderCustom = () => {\r\n  const [userData, setUserData] = useRecoilState(user);\r\n  const setMenuData = useSetRecoilState(menu);\r\n  const [menuDataSoap, setMenuDataSoap] = useRecoilState(menuSoapCall);\r\n  const informationSplit = userData.split(\"|\");\r\n  const menuDataSplit = userData.split(\"|\");\r\n  const tokenData = useRecoilValue(token);\r\n  class QrContainer extends Component {\r\n    constructor(props: any) {\r\n      super(props);\r\n      this.handleScan = this.handleScan.bind(this);\r\n    }\r\n\r\n    errorUser = () => {\r\n      message.error({\r\n        content: \"Debes logearte como usuario antes de poder leer un menú\",\r\n        style: {\r\n          fontSize: \"3em\",\r\n        },\r\n      });\r\n    };\r\n    errorScan = () => {\r\n      message.error({\r\n        content: \"Ha habido un problema a la hora de escanear el QR\",\r\n        style: {\r\n          fontSize: \"3em\",\r\n        },\r\n      });\r\n    };\r\n\r\n    setUserInformation = (data: any) => {\r\n      setUserData(data);\r\n      setMenuData(\"\");\r\n      setMenuDataSoap(\"\");\r\n      SoapCallLogin(\r\n        informationSplit[3],\r\n        informationSplit[4],\r\n        \"http://namespace.aramark.es/\"\r\n      );\r\n    };\r\n\r\n    setMenuInformation = (data: any) => {\r\n      setMenuData(data);\r\n      SoapCallGetMenu(\r\n        menuDataSplit[0],\r\n        tokenData,\r\n        \"http://namespace.aramark.es/\"\r\n      );\r\n      const parser = new DOMParser();\r\n      const xml = parser.parseFromString(xmlData, \"text/xml\");\r\n      var oSerializer = new XMLSerializer();\r\n      const SerializeXML = oSerializer.serializeToString(\r\n        xml.getElementsByTagName(\"MenuPorCama\")[0]\r\n      );\r\n\r\n      parseString(SerializeXML, function (err: any, result: any) {\r\n        setMenuDataSoap(result);\r\n      });\r\n    };\r\n\r\n    handleScan = (data: any) => {\r\n      if (data !== null) {\r\n        data.split(\"|\").length === 5\r\n          ? this.setUserInformation(data)\r\n          : userData === \"\"\r\n          ? this.errorUser()\r\n          : this.setMenuInformation(data);\r\n      }\r\n    };\r\n\r\n    handleError = (err: any) => {\r\n      console.error(err);\r\n      this.errorScan();\r\n    };\r\n\r\n    render() {\r\n      const previewStyleUser = {\r\n        height: \"30em\",\r\n        width: \"30em\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      };\r\n      const previewStyleMenu = {\r\n        height: \"10em\",\r\n        width: \"10em\",\r\n      };\r\n\r\n      return (\r\n        <div>\r\n          <QrReader\r\n            onError={this.handleError}\r\n            onScan={this.handleScan}\r\n            // style={previewStyleUser}\r\n            style={\r\n              Object.keys(menuDataSoap).length === 0\r\n                ? previewStyleUser\r\n                : previewStyleMenu\r\n            }\r\n            // facingMode={changeCamera ? \"user\" : \"environment\"}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <QrContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QrReaderCustom;\r\n","export const SoapCallLogin = (\r\n  username: string,\r\n  password: string,\r\n  url: string\r\n) => {\r\n  var xmlhttp = new XMLHttpRequest();\r\n  xmlhttp.open(\"POST\", url, true);\r\n\r\n  // build SOAP request\r\n  const sr = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n    <soap:Envelope \r\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n        xmlns:api=${url}\r\n        xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\r\n        xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n        <soap:Body>\r\n            <Login xmlns=${url}>\r\n                <User>${username}</User>\r\n                <Pass>${password}</Pass>\r\n            </Login>\r\n        </soap:Body>\r\n    </soap:Envelope>`;\r\n\r\n  xmlhttp.onreadystatechange = function () {\r\n    if (xmlhttp.readyState === 4) {\r\n      if (xmlhttp.status === 200) {\r\n        alert(xmlhttp.responseText);\r\n        // alert('done. use firebug/console to see network response');\r\n      }\r\n    }\r\n  };\r\n  // Send the POST request\r\n  xmlhttp.setRequestHeader(\"Content-Type\", \"text/xml\");\r\n  xmlhttp.send(sr);\r\n  // send request\r\n  // ...\r\n};\r\nexport const SoapCallGetMenu = (token: string, idCama: number, url: string) => {\r\n  var xmlhttp = new XMLHttpRequest();\r\n  xmlhttp.open(\"POST\", url, true);\r\n\r\n  // build SOAP request\r\n  const sr = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n    <soap:Envelope \r\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n        xmlns:api=${url}\r\n        xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\r\n        xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n        <soap:Body>\r\n            <GetMenuPorCama xmlns=${url}>\r\n                <Control>${token}</Control>\r\n                <IDCama>${idCama}</IDCama>\r\n            </GetMenuPorCama>\r\n        </soap:Body>\r\n    </soap:Envelope>`;\r\n\r\n  xmlhttp.onreadystatechange = function () {\r\n    if (xmlhttp.readyState === 4) {\r\n      if (xmlhttp.status === 200) {\r\n        alert(xmlhttp.responseText);\r\n        // alert('done. use firebug/console to see network response');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Send the POST request\r\n  xmlhttp.setRequestHeader(\"Content-Type\", \"text/xml\");\r\n  xmlhttp.send(sr);\r\n  // send request\r\n  // ...\r\n};\r\n","const xml_data = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n<soap:Body>\r\n<MenuPorCama>\r\n<idIngesta>3</idIngesta>\r\n<NombreIngesta>Comida</NombreIngesta>\r\n<idDieta>6</idDieta>\r\n<NombreDieta>Basal</NombreDieta>\r\n<TomaSal>true</TomaSal>\r\n<Observaciones>\r\n<Observacion>El paciente no quiere lechuga</Observacion>\r\n<Observacion>No cerdo</Observacion>\r\n</Observaciones>\r\n<Alergias>\r\n<Alergia>El paciente tiene intolerancia a la piel del melocotón</Alergia>\r\n<Alergia>Gluten</Alergia>\r\n</Alergias>\r\n<Platos>\r\n<Plato>\r\n<idPlato>527887</idPlato>\r\n<NombrePlato>CHOCOLATE A LA TAZA CON LECHE</NombrePlato>\r\n</Plato>\r\n<Plato>\r\n<idPlato>528019</idPlato>\r\n<NombrePlato>CHURROS LAZO</NombrePlato>\r\n</Plato>\r\n<Plato>\r\n<idPlato>528029</idPlato>\r\n<NombrePlato>ARROZ CON POLLO</NombrePlato>\r\n</Plato>\r\n<Plato>\r\n<Plato xsi:nil=\"true\"/>\r\n</Platos>\r\n</MenuPorCama>\r\n</soap:Body>\r\n</soap:Envelope>`;\r\n\r\nexport default xml_data;\r\n","import { Col, Divider, Row, Typography } from \"antd\";\r\nimport React, { ReactElement, useState } from \"react\";\r\n\r\ninterface SectionHeaderProps {\r\n  title: string | ReactElement;\r\n  iconComponent: Function;\r\n  children: ReactElement;\r\n  hideable?: boolean;\r\n  plato?: boolean;\r\n}\r\n\r\nconst { Title } = Typography;\r\n\r\nexport const SectionHeader = ({\r\n  title,\r\n  iconComponent: IconComponent,\r\n  children,\r\n  hideable = false,\r\n  plato = false,\r\n}: SectionHeaderProps) => {\r\n  const [isHided, setIsHide] = useState(true);\r\n  const handleHide = () => {\r\n    setIsHide(!isHided);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title\r\n        onClick={handleHide}\r\n        level={3}\r\n        className=\"title\"\r\n        style={{\r\n          cursor: \"pointer\",\r\n          color: hideable && isHided ? \"#e0e0e0\" : \"#999\",\r\n          fontStyle: hideable && isHided ? \"italic\" : \"normal\",\r\n          textTransform: \"capitalize\",\r\n        }}\r\n      >\r\n        <div style={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n          <Col style={{ display: \"flex\", margin: \"0em 0.5em 0.2em\" }}>\r\n            <IconComponent />\r\n          </Col>\r\n          {title}\r\n        </div>\r\n        <Divider style={{ marginTop: \"0em\" }} />\r\n      </Title>\r\n\r\n      {hideable && isHided ? (\r\n        <></>\r\n      ) : (\r\n        <Row\r\n          style={{\r\n            placeContent: plato ? \"center\" : \"flex-end\",\r\n            display: \"block\",\r\n            textAlignLast: plato ? \"center\" : \"start\",\r\n          }}\r\n        >\r\n          {children}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  HeartOutlined,\r\n  InfoCircleOutlined,\r\n  PicLeftOutlined,\r\n  WarningOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Card, Col, List, Row, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport \"../App.css\";\r\nimport { menu } from \"../recoil/atoms\";\r\nimport QrReaderCustom from \"./qrReader\";\r\nimport { SectionHeader } from \"./sectionHeader\";\r\nconst { Title } = Typography;\r\nexport const CardsMenu = (data: any) => {\r\n  const menuData = useRecoilValue(menu);\r\n  const menuDataSplit = menuData.split(\"|\");\r\n  const idCama = menuDataSplit[0];\r\n\r\n  return (\r\n    <div className={\"Padding\"} style={{ marginBottom: \"2em\" }}>\r\n      <Row gutter={16}>\r\n        <Col span={21}>\r\n          <SectionHeader\r\n            plato={true}\r\n            title=\"Plato\"\r\n            iconComponent={HeartOutlined}\r\n          >\r\n            <div>\r\n              {data.data.Plato !== undefined ? (\r\n                data.data.Plato.map((item: any) => {\r\n                  return (\r\n                    <Title\r\n                    key={item}\r\n                      level={1}\r\n                      style={{\r\n                        fontSize: \"3em\",\r\n                        color: \"black\",\r\n                      }}\r\n                    >\r\n                      {item}\r\n                    </Title>\r\n                  );\r\n                })\r\n              ) : (\r\n                <Title\r\n                  level={1}\r\n                  style={{\r\n                    fontSize: \"3em\",\r\n                    color: \"red\",\r\n                  }}\r\n                >\r\n                  No se ha encontrado ningun plato con el ID proporcionado\r\n                </Title>\r\n              )}\r\n            </div>\r\n          </SectionHeader>\r\n        </Col>\r\n        <Col span={3} style={{ paddingTop: \"5em\" }}>\r\n          <QrReaderCustom />\r\n        </Col>\r\n        <Col span={12}>\r\n          <SectionHeader title=\"Alergias\" iconComponent={WarningOutlined}>\r\n            <List\r\n              style={{\r\n                fontSize: \"2em\",\r\n                textAlignLast: \"start\",\r\n                textAlign: \"start\",\r\n              }}\r\n              size=\"large\"\r\n              bordered\r\n              dataSource={data?.data?.Alergias}\r\n              renderItem={(item: any) => <List.Item>{item}</List.Item>}\r\n            />\r\n          </SectionHeader>\r\n        </Col>\r\n        <Col span={12}>\r\n          <SectionHeader\r\n            title=\"Observaciones\"\r\n            iconComponent={InfoCircleOutlined}\r\n          >\r\n            <List\r\n              style={{\r\n                fontSize: \"2em\",\r\n                textAlignLast: \"start\",\r\n                textAlign: \"start\",\r\n              }}\r\n              size=\"large\"\r\n              bordered\r\n              dataSource={data?.data?.Observaciones}\r\n              renderItem={(item: any) => <List.Item>{item}</List.Item>}\r\n            />\r\n          </SectionHeader>\r\n        </Col>\r\n        <Col span={24} style={{ marginTop: \"1em\" }}>\r\n          <SectionHeader\r\n            plato={true}\r\n            title=\"Extra\"\r\n            iconComponent={PicLeftOutlined}\r\n          >\r\n            <div style={{ display: \"flex\" }}>\r\n              <Col span={6}>\r\n                <Card title=\"Nombre Ingesta\" className=\"Card\">\r\n                  {data.data.NombreIngesta}\r\n                </Card>\r\n              </Col>\r\n              <Col span={6}>\r\n                <Card title=\"Nombre Dieta\" className=\"Card\">\r\n                  {data.data.NombreDieta}\r\n                </Card>\r\n              </Col>\r\n              <Col span={6}>\r\n                <Card title=\"Sal\" className=\"Card\">\r\n                  {data.data.TomaSal === true ? \"Si\" : \"No\"}\r\n                </Card>\r\n              </Col>\r\n              <Col span={6}>\r\n                <Card title=\"Cama\" className=\"Card\">\r\n                  {idCama}\r\n                </Card>\r\n              </Col>\r\n            </div>\r\n          </SectionHeader>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default CardsMenu;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { menu, menuSoapCall, user } from \"../recoil/atoms\";\r\nimport CardsMenu from \"./cardsMenu\";\r\n\r\nexport const ObservacionesFormatter = (observaciones: any) =>\r\n  observaciones.Observacion.map((item: any) => item);\r\n\r\nexport const PlatosFormatter = (platos: any) =>\r\n  platos.Plato.reduce(\r\n    (acum: any, item: any) =>\r\n      \"idPlato\" in item\r\n        ? { ...acum, [item.idPlato]: item.NombrePlato[0] }\r\n        : acum,\r\n    {}\r\n  );\r\nexport const PlatosDietistaFormatter = (platos: any) =>\r\n  platos.Plato.reduce(\r\n    (acum: any, item: any) =>\r\n      \"idPlato\" in item ? [...acum, item.NombrePlato[0]] : acum,\r\n    []\r\n  );\r\n\r\nexport const AlergiasFormatter = (alergias: any) =>\r\n  alergias.Alergia.map((item: any) => item);\r\n\r\nexport const MenuInfo = () => {\r\n  const [data, setData] = useState({});\r\n  const menuDataSoap: any = useRecoilValue(menuSoapCall);\r\n  const menuData = useRecoilValue(menu);\r\n  const userData = useRecoilValue(user);\r\n  const menuDataSplit = menuData.split(\"|\");\r\n  const informationSplit = userData.split(\"|\");\r\n  const position = Number(informationSplit[2]);\r\n  const idPlatoSelected = menuDataSplit[2 + position];\r\n\r\n  const setMenuData = () => {\r\n    if (Object.keys(menuDataSoap).length !== 0) {\r\n      const platoSelected =\r\n        position === 0\r\n          ? PlatosDietistaFormatter(menuDataSoap.MenuPorCama.Platos[0])\r\n          : [\r\n              PlatosFormatter(menuDataSoap.MenuPorCama.Platos[0])[\r\n                idPlatoSelected\r\n              ],\r\n            ];\r\n      const menuArray = {\r\n        NombreDieta: menuDataSoap.MenuPorCama.NombreDieta[0],\r\n        idIngesta: menuDataSoap.MenuPorCama.idIngesta[0],\r\n        idDieta: menuDataSoap.MenuPorCama.idDieta[0],\r\n        TomaSal: menuDataSoap.MenuPorCama.TomaSal[0],\r\n        NombreIngesta: menuDataSoap.MenuPorCama.NombreIngesta[0],\r\n        Observaciones: ObservacionesFormatter(\r\n          menuDataSoap.MenuPorCama.Observaciones[0]\r\n        ),\r\n        Alergias: AlergiasFormatter(menuDataSoap.MenuPorCama.Alergias[0]),\r\n        Plato: platoSelected,\r\n      };\r\n      setData(menuArray);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setMenuData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [menuDataSoap]);\r\n\r\n  return (\r\n    <>\r\n      {Object.keys(menuDataSoap).length !== 0 && (\r\n        <CardsMenu position={position} data={data}></CardsMenu>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MenuInfo;\r\n","// import axios from \"axios\";\r\nimport { Col, Row, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { menuSoapCall, user } from \"../recoil/atoms\";\r\nimport QrReaderCustom from \"./qrReader\";\r\n\r\nconst { Title } = Typography;\r\n\r\nexport const MenuScreen = () => {\r\n  const userData = useRecoilValue(user);\r\n  const menuDataSoap = useRecoilValue(menuSoapCall);\r\n\r\n  return (\r\n    <Row gutter={8} justify=\"space-around\" align=\"middle\">\r\n      {userData === \"\" && (\r\n        <Col\r\n          span={20}\r\n          style={{\r\n            display: \"flex\",\r\n            placeContent: \"center\",\r\n            marginBottom: \"1em\",\r\n            backgroundColor: \"#d9d9d9\",\r\n            borderRadius: \"2em\",\r\n          }}\r\n        >\r\n          <Title\r\n            level={1}\r\n            style={{ margin: \"0px\", padding: \"0.2em\", paddingRight: \"1em\" }}\r\n          >\r\n            Escanea tu usuario\r\n          </Title>\r\n        </Col>\r\n      )}\r\n      {userData !== \"\" && Object.keys(menuDataSoap).length === 0 && (\r\n        <Col\r\n          span={20}\r\n          style={{\r\n            display: \"flex\",\r\n            placeContent: \"center\",\r\n            marginBottom: \"1em\",\r\n            backgroundColor: \"#d9d9d9\",\r\n            borderRadius: \"2em\",\r\n          }}\r\n        >\r\n          <Title\r\n            level={1}\r\n            style={{ margin: \"0px\", padding: \"0.2em\", paddingRight: \"1em\" }}\r\n          >\r\n            Escanea el menú\r\n          </Title>\r\n        </Col>\r\n      )}\r\n      {Object.keys(menuDataSoap).length === 0 && <QrReaderCustom />}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default MenuScreen;\r\n","import { Layout } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React from \"react\";\r\nimport \"./App.css\";\r\nimport HeaderSuperior from \"./Components/headerSuperior\";\r\nimport MenuInfo from \"./Components/menuInfo\";\r\nimport MenuScreen from \"./Components/menuScreen\";\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout className=\"layout\">\r\n        <Header\r\n          style={{\r\n            display: \"grid\",\r\n            backgroundColor: \"#ee3a43\",\r\n          }}\r\n        >\r\n          <HeaderSuperior />\r\n        </Header>\r\n        <Content style={{ backgroundColor: \"#f5f5f5\" }}>\r\n          <>\r\n            <div style={{ marginTop: \"2em\" }}>\r\n              {/* <PlatosInfo /> */}\r\n              <MenuInfo />\r\n              <MenuScreen />\r\n            </div>\r\n          </>\r\n        </Content>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { RecoilRoot } from \"recoil\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <App />\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}