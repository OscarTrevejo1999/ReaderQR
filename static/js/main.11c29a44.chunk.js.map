{"version":3,"sources":["recoil/atoms.ts","Components/centerSelector.tsx","Aramark_logo.png","Components/headerSuperior.tsx","Components/footerInfo.tsx","Components/qrReader.tsx","Components/menuScreen.tsx","Components/positionSelector.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["menuAtom","atom","key","default","menu","id","hc","date","extra","qrCode","centerSelected","positionSelected","Title","Typography","CenterSelector","data","setCenterSelectedData","useSetRecoilState","cardCenter","map","center","span","style","padding","fontSize","height","cursor","marginTop","title","bordered","onClick","idCenter","description","gutter","alignItems","paddingTop","paddingBottom","level","HeaderSuperior","menuAtomData","useRecoilValue","positionSelectedData","src","logo","alt","width","color","FooterInfo","dataFooter","item","justifyContent","QrReaderCustom","changeCamera","setDelay","delay","setMenuAtomData","QrContainer","props","getMenu","a","QrPrueba","handleScan","JSON","parse","handleError","err","console","error","bind","display","onError","this","onScan","facingMode","Component","MenuScreen","useRecoilState","setPositionSelectedData","qrReadData","setQrReadData","useState","setChangeCamera","marginLeft","LeftCircleOutlined","CameraFilled","ReloadOutlined","PositionSelector","centerSelectedData","cardPosition","filter","posiciones","position","idPosition","Header","Layout","Content","App","className","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAEaA,EAAWC,YAAK,CAC3BC,IAAK,WACLC,QAAS,CACPC,KAAM,GACNC,GAAI,GACJC,GAAI,GACJC,KAAM,GACNC,MAAO,CAAC,OAICC,EAASR,YAAK,CACzBC,IAAK,SACLC,QAAS,KAEEO,EAAiBT,YAAK,CACjCC,IAAK,iBACLC,QAAS,KAEEQ,EAAmBV,YAAK,CACnCC,IAAK,mBACLC,QAAS,K,OClBHS,EAAUC,IAAVD,MAsCOE,EAjCe,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KACzBC,EAAwBC,YAAkBP,GAC1CQ,EAAU,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAMI,KAAI,SAACC,GAAD,OAC3B,cAAC,IAAD,CAAKC,KAAM,GAA0BC,MAAO,CAAEC,QAAS,OAAvD,SACE,mBAAGD,MAAO,CAAEE,SAAU,QAASC,OAAQ,OAAvC,SACE,cAAC,IAAD,CACEH,MAAO,CACLI,OAAQ,UACRF,SAAU,QACVC,OAAQ,MACRE,UAAW,OAEbC,MAAOR,EAAOA,OACdS,UAAU,EACVC,QAAS,kBAAMd,EAAsBI,EAAOW,WAT9C,SAWGX,EAAOY,iBAbMZ,EAAOW,aAmB7B,OACE,eAAC,IAAD,CAAKE,OAAQ,GAAIX,MAAO,CAAEY,WAAY,UAAtC,UACE,cAAC,IAAD,CAAKb,KAAM,IACX,cAAC,IAAD,CAAKA,KAAM,GAAIC,MAAO,CAAEa,WAAY,MAAOC,cAAe,OAA1D,SACE,cAACxB,EAAD,CAAOyB,MAAO,EAAd,oCAEDnB,EACD,cAAC,IAAD,CAAKG,KAAM,Q,QCvCF,MAA0B,yCCOjCT,EAAUC,IAAVD,MAkCO0B,EAhCe,WAC5B,IAAMC,EAAeC,YAAexC,GAC9ByC,EAAuBD,YAAe7B,GAC5C,OACE,eAAC,IAAD,CAAKW,MAAO,CAAEY,WAAY,UAA1B,UACE,cAAC,IAAD,CAAKb,KAAM,EAAX,SACE,qBAAKqB,IAAKC,EAAMC,IAAI,OAAOtB,MAAO,CAAEuB,MAAO,YAE7C,cAAC,IAAD,CAAKxB,KAAM,EAAX,SACE,cAAC,EAAD,CAAOC,MAAO,CAAEwB,MAAO,SAAWT,MAAO,EAAzC,SACGI,MAGL,cAAC,IAAD,CAAKpB,KAAM,EAAX,SACE,cAAC,EAAD,CAAOC,MAAO,CAAEwB,MAAO,SAAWT,MAAO,EAAzC,SACGE,EAAalC,OAGlB,cAAC,IAAD,CAAKgB,KAAM,EAAX,SACE,cAAC,EAAD,CAAOC,MAAO,CAAEwB,MAAO,SAAWT,MAAO,EAAzC,SACuB,KAApBE,EAAajC,GAAY,OAASiC,EAAajC,GAAK,OAGzD,cAAC,IAAD,CAAKe,KAAM,EAAX,SACE,cAAC,EAAD,CAAOC,MAAO,CAAEwB,MAAO,SAAWT,MAAO,EAAzC,SACGE,EAAahC,a,mCCVTwC,EAjBW,SAAC,GAA+B,IAClDC,EADiD,EAA5BjC,KACHI,KAAI,SAAC8B,GAC3B,OACE,cAAC,IAAD,CAAK5B,KAAM,EAAX,SACE,cAAC,IAAD,CAAMO,MAAOqB,EAAKrB,MAAlB,SACE,4BAAIqB,EAAKjB,kBAFU,OAAJiB,QAAI,IAAJA,OAAA,EAAAA,EAAMjB,cAAN,OAAoBiB,QAApB,IAAoBA,OAApB,EAAoBA,EAAMrB,WAOjD,OACE,cAAC,IAAD,CAAKN,MAAO,CAAE4B,eAAgB,SAAUhB,WAAY,UAAYD,OAAQ,GAAxE,SACGe,K,kFCoFQG,EA1Fe,SAAC,GAIT,IAHpBC,EAGmB,EAHnBA,aACAC,EAEmB,EAFnBA,SACAC,EACmB,EADnBA,MAEMC,EAAkBtC,YAAkBjB,GAEpCwD,EAHa,kDAIjB,WAAYC,GAAa,IAAD,8BACtB,cAAMA,IAIRC,QALwB,uCAKd,WAAOrD,GAAP,SAAAsD,EAAA,sDACRJ,EAAgBK,GADR,2CALc,wDAkBxBC,WAAa,SAAC9C,GACC,OAATA,IACF,EAAK2C,QAAQI,KAAKC,MAAMhD,GAAMV,IAC9BgD,GAAS,KArBW,EAwBxBW,YAAc,SAACC,GACbC,QAAQC,MAAMF,IAvBd,EAAKJ,WAAa,EAAKA,WAAWO,KAAhB,gBAFI,EAJP,0CA+BjB,WAaE,OACEd,GACE,qBAAKhC,MAPQ,CACf+C,QAAS,OACTnB,eAAgB,UAKd,SACE,cAAC,IAAD,CACEI,QAAOA,GAAQ,KACfgB,QAASC,KAAKP,YACdQ,OAAQD,KAAKV,WACbvC,MAnBa,CACnBG,OAAQ,IACRoB,MAAO,IACPwB,QAAS,OACTnB,eAAgB,UAgBVuB,WAAYrB,EAAe,OAAS,sBApD7B,GAGOsB,aAyDpBd,EAAW,CACfxD,KAAM,uBACNC,GAAI,IACJC,GAAI,SACJC,KAAM,sBACNC,MAAO,CACL,CACEoB,MAAO,eACPI,YAAa,oCAEf,CACEJ,MAAO,2BACPI,YAAa,gBAKnB,OACE,mCACE,cAAC,IAAD,CAAKX,KAAM,GAAX,SACE,cAACmC,EAAD,SCpFA5C,EAAUC,IAAVD,MA+EO+D,EA7EW,WACxB,MAAwCC,YAAe5E,GAAvD,mBAAOuC,EAAP,KAAqBgB,EAArB,KACA,EACEqB,YAAejE,GADjB,mBAAO8B,EAAP,KAA6BoC,EAA7B,KAEA,EAAoCD,YAAenE,GAAnD,mBAAOqE,EAAP,KAAmBC,EAAnB,KACA,EAA0BC,oBAAS,GAAnC,mBAAO1B,EAAP,KAAcD,EAAd,KACA,EAAwC2B,oBAAS,GAAjD,mBAAO5B,EAAP,KAAqB6B,EAArB,KAEA,OACE,qCACE,eAAC,IAAD,CAAKhD,OAAQ,GAAIX,MAAO,CAAEY,WAAY,UAAtC,UACE,eAAC,IAAD,CACEZ,MAAO,CACLa,WAAY,MACZC,cAAe,MACf8C,WAAY,SAJhB,UAOE,cAACC,EAAA,EAAD,CACErD,QAAS,WACP+C,EAAwB,IACxBxB,GAAS,GACT0B,EAAc,IACdxB,EAAgB,CACdnD,KAAM,GACNC,GAAI,GACJC,GAAI,GACJC,KAAM,GACNC,MAAO,CAAC,OAGZc,MAAO,CAAEE,SAAU,MAAOsB,MAAO,UAEnC,cAACsC,EAAA,EAAD,CACEtD,QAAS,WACPmD,GAAiB7B,IAEnB9B,MAAO,CAAEE,SAAU,MAAOsB,MAAO,OAAQoC,WAAY,WAEvD,cAACG,EAAA,EAAD,CACEvD,QAAS,WACPuB,GAAS,GACT0B,EAAc,IACdxB,EAAgB,CACdnD,KAAM,GACNC,GAAI,GACJC,GAAI,GACJC,KAAM,GACNC,MAAO,CAAC,OAGZc,MAAO,CAAEE,SAAU,MAAOsB,MAAO,OAAQoC,WAAY,cAGzD,cAAC,EAAD,CACE9B,aAAcA,EACdC,SAAUA,EACVC,MAAOA,IAET,eAAC,IAAD,CAAKjC,KAAM,GAAIC,MAAO,CAAEa,WAAYmB,EAAQ,OAAS,OAArD,UACkB,KAAfwB,GACC,eAAC,EAAD,CAAOzC,MAAO,EAAGf,MAAO,CAAEwB,MAAO,QAAjC,iBACOgC,KAGT,cAAC,EAAD,CAAOzC,MAAO,EAAd,gBAAkBE,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAcnC,aAGV,aAAzBqC,EACC,qBAAKnB,MAAO,CAAE4B,eAAgB,UAA9B,UACII,GAAS,cAAC,EAAD,CAAYvC,KAAI,OAAEwB,QAAF,IAAEA,OAAF,EAAEA,EAAc/B,UAE3C,SCjFFI,EAAUC,IAAVD,MAoDO0E,EA/CiB,SAAC,GAAqC,IAAD,IAAlCvE,EAAkC,EAAlCA,KAC3B8D,EAA0B5D,YAAkBN,GAClD,EACEiE,YAAelE,GADjB,mBAAO6E,EAAP,KAA2BvE,EAA3B,KAOMwE,EAAY,UAJMzE,EAAK0E,QAC3B,SAACxC,GAAD,OAAeA,EAAKlB,WAAawD,KAGE,UAAnB,iBAAG,EAAoBG,kBAAvB,aAAG,EAAgCvE,KAAI,SAACwE,GACxD,OACE,cAAC,IAAD,CAAKtE,KAAM,GAA8BC,MAAO,CAAEC,QAAS,OAA3D,SACE,mBAAGD,MAAO,CAAEE,SAAU,QAASC,OAAQ,OAAvC,SACE,cAAC,IAAD,CACEH,MAAO,CACLI,OAAQ,UACRF,SAAU,QACVC,OAAQ,MACRE,UAAW,OAEbC,MAAO+D,EAASA,SAChB9D,UAAU,EACVC,QAAS,kBAAM+C,EAAwBc,EAASA,WATlD,SAWGA,EAAS3D,iBAbI2D,EAASC,eAoBjC,OACE,eAAC,IAAD,CAAK3D,OAAQ,GAAIX,MAAO,CAAEY,WAAY,UAAtC,UACE,cAAC,IAAD,CAAKb,KAAM,EAAGC,MAAO,CAAEa,WAAY,MAAOC,cAAe,OAAzD,SACE,cAAC+C,EAAA,EAAD,CACErD,QAAS,kBAAMd,EAAsB,KACrCM,MAAO,CAAEE,SAAU,MAAOsB,MAAO,YAGrC,cAAC,IAAD,CAAKzB,KAAM,GAAIC,MAAO,CAAEa,WAAY,MAAOC,cAAe,OAA1D,SACE,cAAC,EAAD,CAAOC,MAAO,EAAd,0CAEF,cAAC,IAAD,CAAKhB,KAAM,IACVmE,MC1CCK,EAAoBC,IAApBD,OAAQE,EAAYD,IAAZC,QAoCDC,MAlCf,WACE,IAAMvD,EAAuBD,YAAe7B,GACtC4E,EAAqB/C,YAAe9B,GAM1C,OACE,qBAAKuF,UAAU,MAAf,SACE,eAAC,IAAD,CAAQA,UAAU,SAAlB,UACE,cAACJ,EAAD,CACEvE,MAAO,CAAE+C,QAAS,OAAQ6B,gBAAiB,UAAWzE,OAAQ,OADhE,SAGE,cAAC,EAAD,MAEF,cAACsE,EAAD,CAASzE,MAAO,CAAEC,QAAS,SAAUE,OAAQ,OAA7C,SACE,mCAC0B,KAAvB8D,EACC,cAAC,EAAD,CAAgBxE,KAAMA,IACK,KAAzB0B,EACF,cAAC,EAAD,CAAkB1B,KAAMA,IAExB,8BACE,cAAC,EAAD,gBCxBDoF,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.11c29a44.chunk.js","sourcesContent":["import { atom } from \"recoil\";\r\n\r\nexport const menuAtom = atom({\r\n  key: \"menuAtom\", // unique ID (with respect to other atoms/selectors)\r\n  default: {\r\n    menu: \"\",\r\n    id: \"\",\r\n    hc: \"\",\r\n    date: \"\",\r\n    extra: [{}],\r\n  }, // default value (aka initial value)\r\n});\r\n\r\nexport const qrCode = atom({\r\n  key: \"qrCode\", // unique ID (with respect to other atoms/selectors)\r\n  default: \"\", // default value (aka initial value)\r\n});\r\nexport const centerSelected = atom({\r\n  key: \"centerSelected\", // unique ID (with respect to other atoms/selectors)\r\n  default: \"\", // default value (aka initial value)\r\n});\r\nexport const positionSelected = atom({\r\n  key: \"positionSelected\", // unique ID (with respect to other atoms/selectors)\r\n  default: \"\", // default value (aka initial value)\r\n});\r\n","import { Card, Col, Row, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { centerSelected } from \"../recoil/atoms\";\r\n\r\nconst { Title } = Typography;\r\ninterface CenterSelectorProps {\r\n  data: any;\r\n}\r\n\r\nexport const CenterSelector = ({ data }: CenterSelectorProps) => {\r\n  const setCenterSelectedData = useSetRecoilState(centerSelected);\r\n  const cardCenter = data?.map((center: any) => (\r\n    <Col span={12} key={center.idCenter} style={{ padding: \"1em\" }}>\r\n      <p style={{ fontSize: \"1.5em\", height: \"7em\" }}>\r\n        <Card\r\n          style={{\r\n            cursor: \"pointer\",\r\n            fontSize: \"1.2em\",\r\n            height: \"7em\",\r\n            marginTop: \"1em\",\r\n          }}\r\n          title={center.center}\r\n          bordered={false}\r\n          onClick={() => setCenterSelectedData(center.idCenter)}\r\n        >\r\n          {center.description}\r\n        </Card>\r\n      </p>\r\n    </Col>\r\n  ));\r\n\r\n  return (\r\n    <Row gutter={16} style={{ alignItems: \"center\" }}>\r\n      <Col span={3} />\r\n      <Col span={18} style={{ paddingTop: \"2em\", paddingBottom: \"2em\" }}>\r\n        <Title level={1}>Selecciona un centro</Title>\r\n      </Col>\r\n      {cardCenter}\r\n      <Col span={3} />\r\n    </Row>\r\n  );\r\n};\r\nexport default CenterSelector;\r\n","export default __webpack_public_path__ + \"static/media/Aramark_logo.bf37d627.png\";","import { Col, Row } from \"antd\";\r\nimport React from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport logo from \"./../Aramark_logo.png\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { menuAtom, positionSelected } from \"../recoil/atoms\";\r\n\r\nconst { Title } = Typography;\r\n\r\nexport const HeaderSuperior = () => {\r\n  const menuAtomData = useRecoilValue(menuAtom);\r\n  const positionSelectedData = useRecoilValue(positionSelected);\r\n  return (\r\n    <Row style={{ alignItems: \"center\" }}>\r\n      <Col span={4}>\r\n        <img src={logo} alt=\"Logo\" style={{ width: \"12em\" }} />\r\n      </Col>\r\n      <Col span={5}>\r\n        <Title style={{ color: \"white\" }} level={4}>\r\n          {positionSelectedData}\r\n        </Title>\r\n      </Col>\r\n      <Col span={5}>\r\n        <Title style={{ color: \"white\" }} level={4}>\r\n          {menuAtomData.id}\r\n        </Title>\r\n      </Col>\r\n      <Col span={5}>\r\n        <Title style={{ color: \"white\" }} level={4}>\r\n          {menuAtomData.hc !== \"\" ? \" HC:\" + menuAtomData.hc : \"\"}\r\n        </Title>\r\n      </Col>\r\n      <Col span={5}>\r\n        <Title style={{ color: \"white\" }} level={4}>\r\n          {menuAtomData.date}\r\n        </Title>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default HeaderSuperior;\r\n","import { Card, Col, Row } from \"antd\";\r\nimport React from \"react\";\r\n\r\ninterface FooterInfoProps {\r\n  data: any;\r\n}\r\n\r\nexport const FooterInfo = ({ data }: FooterInfoProps) => {\r\n  const dataFooter = data.map((item: any) => {\r\n    return (\r\n      <Col span={6} key={item?.description + item?.title}>\r\n        <Card title={item.title}>\r\n          <p>{item.description}</p>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  });\r\n  return (\r\n    <Row style={{ justifyContent: \"center\", alignItems: \"center\" }} gutter={16}>\r\n      {dataFooter}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default FooterInfo;\r\n","import { Col } from \"antd\";\r\n// import axios from \"axios\";\r\nimport React, { Component, useState } from \"react\";\r\nimport QrReader from \"react-qr-reader\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport { menuAtom, qrCode } from \"../recoil/atoms\";\r\n\r\ninterface QrReaderProps {\r\n  changeCamera: any;\r\n  setDelay: any;\r\n  delay: boolean;\r\n}\r\n\r\nexport const QrReaderCustom = ({\r\n  changeCamera,\r\n  setDelay,\r\n  delay,\r\n}: QrReaderProps) => {\r\n  const setMenuAtomData = useSetRecoilState(menuAtom);\r\n\r\n  class QrContainer extends Component {\r\n    constructor(props: any) {\r\n      super(props);\r\n      this.handleScan = this.handleScan.bind(this);\r\n    }\r\n\r\n    getMenu = async (id: any) => {\r\n      setMenuAtomData(QrPrueba);\r\n      // const res = await axios\r\n      //   .get(`https://60f821159cdca0001745522a.mockapi.io`)\r\n      //   .then((data) => data)\r\n      //   .catch((error) => error);\r\n      // if (res.status === 200) {\r\n      //   setMenuAtomData(res.data);\r\n      // } else {\r\n      // setMenuAtomData(QrPrueba);\r\n      // }\r\n    };\r\n\r\n    handleScan = (data: any) => {\r\n      if (data !== null) {\r\n        this.getMenu(JSON.parse(data).id);\r\n        setDelay(false);\r\n      }\r\n    };\r\n    handleError = (err: any) => {\r\n      console.error(err);\r\n    };\r\n    render() {\r\n      const previewStyle = {\r\n        height: 350,\r\n        width: 500,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      };\r\n\r\n      const camStyle = {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      };\r\n\r\n      return (\r\n        delay && (\r\n          <div style={camStyle}>\r\n            <QrReader\r\n              delay={delay ? 1500 : false}\r\n              onError={this.handleError}\r\n              onScan={this.handleScan}\r\n              style={previewStyle}\r\n              facingMode={changeCamera ? \"user\" : \"environment\"}\r\n            />\r\n          </div>\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  const QrPrueba = {\r\n    menu: \"Pure de Calabacín\",\r\n    id: \"2\",\r\n    hc: \"223291\",\r\n    date: \"28/04/2021 - Comida\",\r\n    extra: [\r\n      {\r\n        title: \"Otros platos\",\r\n        description: \"Estofado de ternera con verduras\",\r\n      },\r\n      {\r\n        title: \"Alergias y observaciones\",\r\n        description: \"No pescado\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col span={24}>\r\n        <QrContainer />\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QrReaderCustom;\r\n","import {\r\n  CameraFilled,\r\n  LeftCircleOutlined,\r\n  ReloadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Col, Row, Typography } from \"antd\";\r\n// import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { menuAtom, positionSelected, qrCode } from \"../recoil/atoms\";\r\nimport FooterInfo from \"./footerInfo\";\r\nimport QrReaderCustom from \"./qrReader\";\r\n\r\nconst { Title } = Typography;\r\n\r\nexport const MenuScreen = () => {\r\n  const [menuAtomData, setMenuAtomData] = useRecoilState(menuAtom);\r\n  const [positionSelectedData, setPositionSelectedData] =\r\n    useRecoilState(positionSelected);\r\n  const [qrReadData, setQrReadData] = useRecoilState(qrCode);\r\n  const [delay, setDelay] = useState(true);\r\n  const [changeCamera, setChangeCamera] = useState(true);\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={16} style={{ alignItems: \"center\" }}>\r\n        <Col\r\n          style={{\r\n            paddingTop: \"2em\",\r\n            paddingBottom: \"1em\",\r\n            marginLeft: \"0.2em\",\r\n          }}\r\n        >\r\n          <LeftCircleOutlined\r\n            onClick={() => {\r\n              setPositionSelectedData(\"\");\r\n              setDelay(true);\r\n              setQrReadData(\"\");\r\n              setMenuAtomData({\r\n                menu: \"\",\r\n                id: \"\",\r\n                hc: \"\",\r\n                date: \"\",\r\n                extra: [{}],\r\n              });\r\n            }}\r\n            style={{ fontSize: \"5em\", color: \"grey\" }}\r\n          />\r\n          <CameraFilled\r\n            onClick={() => {\r\n              setChangeCamera(!changeCamera);\r\n            }}\r\n            style={{ fontSize: \"5em\", color: \"grey\", marginLeft: \"0.2em\" }}\r\n          />\r\n          <ReloadOutlined\r\n            onClick={() => {\r\n              setDelay(true);\r\n              setQrReadData(\"\");\r\n              setMenuAtomData({\r\n                menu: \"\",\r\n                id: \"\",\r\n                hc: \"\",\r\n                date: \"\",\r\n                extra: [{}],\r\n              });\r\n            }}\r\n            style={{ fontSize: \"5em\", color: \"grey\", marginLeft: \"0.2em\" }}\r\n          />\r\n        </Col>\r\n        <QrReaderCustom\r\n          changeCamera={changeCamera}\r\n          setDelay={setDelay}\r\n          delay={delay}\r\n        />\r\n        <Col span={24} style={{ paddingTop: delay ? \"13em\" : \"1em\" }}>\r\n          {qrReadData !== \"\" && (\r\n            <Title level={1} style={{ color: \"grey\" }}>\r\n              ID: {qrReadData}\r\n            </Title>\r\n          )}\r\n          <Title level={1}>{menuAtomData?.menu}</Title>\r\n        </Col>\r\n      </Row>\r\n      {positionSelectedData === \"Dietista\" ? (\r\n        <div style={{ justifyContent: \"center\" }}>\r\n          {!delay && <FooterInfo data={menuAtomData?.extra} />}\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuScreen;\r\n","import { LeftCircleOutlined } from \"@ant-design/icons\";\r\nimport { Card, Col, Row, Typography } from \"antd\";\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport { positionSelected } from \"../recoil/atoms\";\r\nimport { centerSelected } from \"./../recoil/atoms\";\r\n\r\nconst { Title } = Typography;\r\ninterface PositionSelectorProps {\r\n  data: any;\r\n}\r\n\r\nexport const PositionSelector = ({ data }: PositionSelectorProps) => {\r\n  const setPositionSelectedData = useSetRecoilState(positionSelected);\r\n  const [centerSelectedData, setCenterSelectedData] =\r\n    useRecoilState(centerSelected);\r\n\r\n  const filterPositions = data.filter(\r\n    (item: any) => item.idCenter === centerSelectedData\r\n  );\r\n\r\n  const cardPosition = filterPositions[0]?.posiciones?.map((position: any) => {\r\n    return (\r\n      <Col span={12} key={position.idPosition} style={{ padding: \"1em\" }}>\r\n        <p style={{ fontSize: \"1.5em\", height: \"7em\" }}>\r\n          <Card\r\n            style={{\r\n              cursor: \"pointer\",\r\n              fontSize: \"1.2em\",\r\n              height: \"7em\",\r\n              marginTop: \"1em\",\r\n            }}\r\n            title={position.position}\r\n            bordered={false}\r\n            onClick={() => setPositionSelectedData(position.position)}\r\n          >\r\n            {position.description}\r\n          </Card>\r\n        </p>\r\n      </Col>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Row gutter={16} style={{ alignItems: \"center\" }}>\r\n      <Col span={3} style={{ paddingTop: \"2em\", paddingBottom: \"2em\" }}>\r\n        <LeftCircleOutlined\r\n          onClick={() => setCenterSelectedData(\"\")}\r\n          style={{ fontSize: \"5em\", color: \"grey\" }}\r\n        />\r\n      </Col>\r\n      <Col span={18} style={{ paddingTop: \"2em\", paddingBottom: \"2em\" }}>\r\n        <Title level={1}>Selecciona una posición</Title>\r\n      </Col>\r\n      <Col span={3} />\r\n      {cardPosition}\r\n    </Row>\r\n  );\r\n};\r\nexport default PositionSelector;\r\n","import { Layout } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport \"./App.css\";\r\nimport CenterSelector from \"./Components/centerSelector\";\r\nimport data from \"./Components/data.json\";\r\nimport HeaderSuperior from \"./Components/headerSuperior\";\r\nimport MenuScreen from \"./Components/menuScreen\";\r\nimport PositionSelector from \"./Components/positionSelector\";\r\nimport { centerSelected, positionSelected } from \"./recoil/atoms\";\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nfunction App() {\r\n  const positionSelectedData = useRecoilValue(positionSelected);\r\n  const centerSelectedData = useRecoilValue(centerSelected);\r\n\r\n  // useEffect(() => {\r\n  //   // Actualiza el título del documento usando la API del navegador\r\n  // }, [state]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout className=\"layout\">\r\n        <Header\r\n          style={{ display: \"grid\", backgroundColor: \"#ee3a43\", height: \"10%\" }}\r\n        >\r\n          <HeaderSuperior />\r\n        </Header>\r\n        <Content style={{ padding: \"0 50px\", height: \"90%\" }}>\r\n          <>\r\n            {centerSelectedData === \"\" ? (\r\n              <CenterSelector data={data} />\r\n            ) : positionSelectedData === \"\" ? (\r\n              <PositionSelector data={data} />\r\n            ) : (\r\n              <div>\r\n                <MenuScreen />\r\n              </div>\r\n            )}\r\n          </>\r\n        </Content>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { RecoilRoot } from \"recoil\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <App />\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}