{"version":3,"sources":["Components/centerSelector.tsx","Aramark_logo.png","recoil/atoms.ts","Components/headerSuperior.tsx","Components/footerInfo.tsx","Components/menuScreen.tsx","Components/positionSelector.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Title","Typography","CenterSelector","setCenterSelected","centerSelected","data","console","log","cardCenter","map","center","span","style","padding","fontSize","height","cursor","marginTop","title","bordered","onClick","idCenter","description","gutter","alignItems","paddingTop","paddingBottom","level","menuAtom","atom","key","default","menu","id","hc","date","extra","qrRead","HeaderSuperior","menuAtomData","useRecoilValue","src","logo","alt","width","color","FooterInfo","dataFooter","item","justifyContent","MenuScreen","setPositionSelected","positionSelected","useRecoilState","setMenuAtomData","qrReadData","setQrReadData","useState","delay","setDelay","changeCamera","setChangeCamera","QrContainer","props","handleScan","JSON","parse","handleError","err","error","bind","display","showViewFinder","onError","this","onScan","facingMode","Component","QrPrueba","a","getMenu","useEffect","marginLeft","LeftCircleOutlined","CameraFilled","ReloadOutlined","PositionSelector","filterPositions","filter","cardPosition","posiciones","position","idPosition","Header","Layout","Content","App","className","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e6c55d0.chunk.js","sourcesContent":["import { Card, Col, Row, Typography } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst { Title } = Typography;\r\ninterface CenterSelectorProps {\r\n  setCenterSelected: any;\r\n  centerSelected: string;\r\n  data: any;\r\n}\r\n\r\nexport const CenterSelector = ({\r\n  setCenterSelected,\r\n  centerSelected,\r\n  data,\r\n}: CenterSelectorProps) => {\r\n  console.log(centerSelected);\r\n\r\n  const cardCenter = data?.map((center: any) => (\r\n    <Col span={12} key={center.idCenter} style={{ padding: \"1em\" }}>\r\n      <p style={{ fontSize: \"1.5em\", height: \"7em\" }}>\r\n        <Card\r\n          style={{\r\n            cursor: \"pointer\",\r\n            fontSize: \"1.2em\",\r\n            height: \"7em\",\r\n            marginTop: \"1em\",\r\n          }}\r\n          title={center.center}\r\n          bordered={false}\r\n          onClick={() => setCenterSelected(center.idCenter)}\r\n        >\r\n          {center.description}\r\n        </Card>\r\n      </p>\r\n    </Col>\r\n  ));\r\n\r\n  return (\r\n    <Row gutter={16} style={{ alignItems: \"center\" }}>\r\n      <Col span={3} />\r\n      <Col span={18} style={{ paddingTop: \"2em\", paddingBottom: \"2em\" }}>\r\n        <Title level={1}>Selecciona un centro</Title>\r\n      </Col>\r\n      {cardCenter}\r\n      <Col span={3} />\r\n    </Row>\r\n  );\r\n};\r\nexport default CenterSelector;\r\n","export default __webpack_public_path__ + \"static/media/Aramark_logo.bf37d627.png\";","import { atom } from \"recoil\";\r\n\r\nexport const menuAtom = atom({\r\n  key: \"menuAtom\", // unique ID (with respect to other atoms/selectors)\r\n  default: {\r\n    menu: \"\",\r\n    id: \"\",\r\n    hc: \"\",\r\n    date: \"\",\r\n    extra: [{}],\r\n  }, // default value (aka initial value)\r\n});\r\n\r\nexport const qrRead = atom({\r\n  key: \"qrRead\", // unique ID (with respect to other atoms/selectors)\r\n  default: \"\", // default value (aka initial value)\r\n});\r\n","import { Col, Row } from \"antd\";\r\nimport React from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport logo from \"./../Aramark_logo.png\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { menuAtom } from \"../recoil/atoms\";\r\n\r\nconst { Title } = Typography;\r\n\r\n\r\nexport const HeaderSuperior = () => {\r\n  const menuAtomData = useRecoilValue(menuAtom);\r\n\r\n  return (\r\n    <Row style={{ alignItems: \"center\" }}>\r\n      <Col span={3}>\r\n        <img src={logo} alt=\"Logo\" style={{ width: \"12em\" }} />\r\n      </Col>\r\n      <Col span={5}>\r\n        <Title style={{ color: \"white\" }} level={4}>\r\n          {menuAtomData.id}\r\n        </Title>\r\n      </Col>\r\n      <Col span={8}>\r\n        <Title style={{ color: \"white\" }} level={4}>\r\n          {menuAtomData.hc !== \"\" ? \" HC:\" + menuAtomData.hc : \"\"}\r\n        </Title>\r\n      </Col>\r\n      <Col span={8}>\r\n        <Title style={{ color: \"white\" }} level={4}>\r\n          {menuAtomData.date}\r\n        </Title>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default HeaderSuperior;\r\n","import { Card, Col, Row } from \"antd\";\r\nimport React from \"react\";\r\n\r\ninterface FooterInfoProps {\r\n  data: any;\r\n}\r\n\r\nexport const FooterInfo = ({ data }: FooterInfoProps) => {\r\n  const dataFooter = data.map((item: any) => {\r\n    return (\r\n      <Col span={6}>\r\n        <Card title={item.title} style={{ width: 300 }}>\r\n          <p>{item.description}</p>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  });\r\n  return (\r\n    <Row style={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n      {dataFooter}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default FooterInfo;\r\n","import {\r\n  CameraFilled,\r\n  LeftCircleOutlined,\r\n  ReloadOutlined\r\n} from \"@ant-design/icons\";\r\nimport { Col, Row, Typography } from \"antd\";\r\n// import axios from \"axios\";\r\nimport React, { Component, useEffect, useState } from \"react\";\r\nimport QrReader from \"react-qr-reader\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { menuAtom, qrRead } from \"../recoil/atoms\";\r\nimport FooterInfo from \"./footerInfo\";\r\n\r\nconst { Title } = Typography;\r\n\r\ninterface MenuScreenProps {\r\n  setPositionSelected: any;\r\n  positionSelected: any;\r\n}\r\n\r\nexport const MenuScreen = ({\r\n  setPositionSelected,\r\n  positionSelected,\r\n}: MenuScreenProps) => {\r\n  const [menuAtomData, setMenuAtomData] = useRecoilState(menuAtom);\r\n  const [qrReadData, setQrReadData] = useRecoilState(qrRead);\r\n  const [delay, setDelay] = useState(true);\r\n  const [changeCamera, setChangeCamera] = useState(true);\r\n\r\n  class QrContainer extends Component {\r\n    constructor(props: any) {\r\n      super(props);\r\n      this.handleScan = this.handleScan.bind(this);\r\n    }\r\n\r\n    handleScan = (data: any) => {\r\n      console.log(data);\r\n      if (data !== null) {\r\n        setQrReadData(JSON.parse(data).id);\r\n        setDelay(false);\r\n      }\r\n    };\r\n    handleError = (err: any) => {\r\n      console.error(err);\r\n    };\r\n    render() {\r\n      const previewStyle = {\r\n        height: 350,\r\n        width: 500,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      };\r\n\r\n      const camStyle = {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      };\r\n\r\n      return (\r\n        <div style={camStyle}>\r\n          <QrReader\r\n            delay={delay ? 1500 : false}\r\n            showViewFinder={delay ? true : false}\r\n            onError={this.handleError}\r\n            onScan={this.handleScan}\r\n            style={previewStyle}\r\n            facingMode={changeCamera ? \"user\" : \"environment\"}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  const QrPrueba = {\r\n    menu: \"Pure de Calabacín\",\r\n    id: \"2\",\r\n    hc: \"223291\",\r\n    date: \"28/04/2021 - Comida\",\r\n    extra: [\r\n      {\r\n        title: \"Otros platos\",\r\n        description: \"Estofado de ternera con verduras\",\r\n      },\r\n      {\r\n        title: \"Alergias y observaciones\",\r\n        description: \"No pescado\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  // console.log(JSON.stringify(QrPrueba));\r\n\r\n  const getMenu = async (id: any) => {\r\n    // const res = await axios\r\n    //   .get(`https://60f821159cdca0001745522a.mockapi.io`)\r\n    //   .then((data) => data)\r\n    //   .catch((error) => error);\r\n    // if (res.status === 200) {\r\n    //   setMenuAtomData(res.data);\r\n    // } else {\r\n    //change\r\n    setMenuAtomData(QrPrueba);\r\n\r\n    // }\r\n  };\r\n  qrReadData !== \"\" ? getMenu(qrReadData) : console.log({ qrReadData });\r\n\r\n  useEffect(() => {}, [menuAtomData, delay, qrReadData]);\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={16} style={{ alignItems: \"center\" }}>\r\n        <Col\r\n          span={3}\r\n          style={{\r\n            paddingTop: \"2em\",\r\n            paddingBottom: \"1em\",\r\n            marginLeft: \"0.2em\",\r\n          }}\r\n        >\r\n          <LeftCircleOutlined\r\n            onClick={() => {\r\n              setPositionSelected(\"\");\r\n              setDelay(true);\r\n              setQrReadData(\"\");\r\n              setMenuAtomData({\r\n                menu: \"\",\r\n                id: \"\",\r\n                hc: \"\",\r\n                date: \"\",\r\n                extra: [{}],\r\n              });\r\n            }}\r\n            style={{ fontSize: \"5em\", color: \"grey\" }}\r\n          />\r\n          <CameraFilled\r\n            onClick={() => {\r\n              setChangeCamera(!changeCamera);\r\n            }}\r\n            style={{ fontSize: \"5em\", color: \"grey\", marginLeft: \"0.2em\" }}\r\n          />\r\n          <ReloadOutlined\r\n            onClick={() => {\r\n              setDelay(true);\r\n              setQrReadData(\"\");\r\n              setMenuAtomData({\r\n                menu: \"\",\r\n                id: \"\",\r\n                hc: \"\",\r\n                date: \"\",\r\n                extra: [{}],\r\n              });\r\n            }}\r\n            style={{ fontSize: \"5em\", color: \"grey\", marginLeft: \"0.2em\" }}\r\n          />\r\n        </Col>\r\n        <Col span={24}>\r\n          <QrContainer />\r\n        </Col>\r\n        <Col span={24} style={{ paddingTop: delay ? \"13em\" : \"1em\" }}>\r\n          <Title level={1} style={{ color: \"grey\" }}>\r\n            Position: {positionSelected}\r\n          </Title>\r\n          {qrReadData !== \"\" ? (\r\n            <Title level={1} style={{ color: \"grey\" }}>\r\n              ID: {qrReadData}\r\n            </Title>\r\n          ) : null}\r\n          <Title level={1}>{menuAtomData && menuAtomData?.menu}</Title>\r\n        </Col>\r\n      </Row>\r\n      {positionSelected === \"Dietista\" ? (\r\n        <div style={{ justifyContent: \"center\" }}>\r\n          <FooterInfo data={menuAtomData?.extra} />\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuScreen;\r\n","import { LeftCircleOutlined } from \"@ant-design/icons\";\r\nimport { Card, Col, Row, Typography } from \"antd\";\r\n\r\nconst { Title } = Typography;\r\ninterface PositionSelectorProps {\r\n  setPositionSelected: any;\r\n  setCenterSelected: any;\r\n  positionSelected: string;\r\n  centerSelected: any;\r\n  data: any;\r\n}\r\n\r\nexport const PositionSelector = ({\r\n  setPositionSelected,\r\n  positionSelected,\r\n  centerSelected,\r\n  setCenterSelected,\r\n  data,\r\n}: PositionSelectorProps) => {\r\n  console.log(data);\r\n  console.log(centerSelected);\r\n  const filterPositions = data.filter(\r\n    (item: any) => item.idCenter === centerSelected\r\n  );\r\n  console.log(filterPositions);\r\n\r\n  const cardPosition = filterPositions[0]?.posiciones?.map((position: any) => (\r\n    <Col span={12} key={position.idPosition} style={{ padding: \"1em\" }}>\r\n      <p style={{ fontSize: \"1.5em\", height: \"7em\" }}>\r\n        <Card\r\n          style={{\r\n            cursor: \"pointer\",\r\n            fontSize: \"1.2em\",\r\n            height: \"7em\",\r\n            marginTop: \"1em\",\r\n          }}\r\n          title={position.position}\r\n          bordered={false}\r\n          onClick={() => setPositionSelected(position.position)}\r\n        >\r\n          {position.description}\r\n        </Card>\r\n      </p>\r\n    </Col>\r\n  ));\r\n\r\n  return (\r\n    <Row gutter={16} style={{ alignItems: \"center\" }}>\r\n      <Col span={3} style={{ paddingTop: \"2em\", paddingBottom: \"2em\" }}>\r\n        <LeftCircleOutlined\r\n          onClick={() => setCenterSelected(\"\")}\r\n          style={{ fontSize: \"5em\", color: \"grey\" }}\r\n        />\r\n      </Col>\r\n      <Col span={18} style={{ paddingTop: \"2em\", paddingBottom: \"2em\" }}>\r\n        <Title level={1}>Selecciona una posición</Title>\r\n      </Col>\r\n      <Col span={3} />\r\n      {cardPosition}\r\n    </Row>\r\n  );\r\n};\r\nexport default PositionSelector;\r\n","import { Layout } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport CenterSelector from \"./Components/centerSelector\";\r\nimport data from \"./Components/data.json\";\r\nimport HeaderSuperior from \"./Components/headerSuperior\";\r\nimport MenuScreen from \"./Components/menuScreen\";\r\nimport PositionSelector from \"./Components/positionSelector\";\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nfunction App() {\r\n  const [centerSelected, setCenterSelected] = useState(\"\");\r\n  const [positionSelected, setPositionSelected] = useState(\"\");\r\n\r\n  // useEffect(() => {\r\n  //   // Actualiza el título del documento usando la API del navegador\r\n  // }, [state]);\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout className=\"layout\">\r\n        <Header\r\n          style={{ display: \"grid\", backgroundColor: \"#ee3a43\", height: \"10%\" }}\r\n        >\r\n          <HeaderSuperior />\r\n        </Header>\r\n        <Content style={{ padding: \"0 50px\", height: \"90%\" }}>\r\n          <div>\r\n            {centerSelected === \"\" ? (\r\n              <CenterSelector\r\n                data={data}\r\n                setCenterSelected={setCenterSelected}\r\n                centerSelected={centerSelected}\r\n              />\r\n            ) : positionSelected === \"\" ? (\r\n              <PositionSelector\r\n                data={data}\r\n                centerSelected={centerSelected}\r\n                setCenterSelected={setCenterSelected}\r\n                setPositionSelected={setPositionSelected}\r\n                positionSelected={positionSelected}\r\n              />\r\n            ) : (\r\n              <div>\r\n                <MenuScreen\r\n                  positionSelected={positionSelected}\r\n                  setPositionSelected={setPositionSelected}\r\n                />\r\n                <div style={{ padding: \"2em\" }} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Content>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { RecoilRoot } from \"recoil\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <App />\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}